// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	entity "questionnaire-bot/internal/entity"

	mock "github.com/stretchr/testify/mock"
)

// MockHandler is an autogenerated mock type for the Handler type
type MockHandler struct {
	mock.Mock
}

type MockHandler_Expecter struct {
	mock *mock.Mock
}

func (_m *MockHandler) EXPECT() *MockHandler_Expecter {
	return &MockHandler_Expecter{mock: &_m.Mock}
}

// AdvanceStep provides a mock function with given fields: _a0
func (_m *MockHandler) AdvanceStep(_a0 *entity.User) {
	_m.Called(_a0)
}

// MockHandler_AdvanceStep_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AdvanceStep'
type MockHandler_AdvanceStep_Call struct {
	*mock.Call
}

// AdvanceStep is a helper method to define mock.On call
//   - _a0 *entity.User
func (_e *MockHandler_Expecter) AdvanceStep(_a0 interface{}) *MockHandler_AdvanceStep_Call {
	return &MockHandler_AdvanceStep_Call{Call: _e.mock.On("AdvanceStep", _a0)}
}

func (_c *MockHandler_AdvanceStep_Call) Run(run func(_a0 *entity.User)) *MockHandler_AdvanceStep_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*entity.User))
	})
	return _c
}

func (_c *MockHandler_AdvanceStep_Call) Return() *MockHandler_AdvanceStep_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHandler_AdvanceStep_Call) RunAndReturn(run func(*entity.User)) *MockHandler_AdvanceStep_Call {
	_c.Run(run)
	return _c
}

// FinishSurvey provides a mock function with given fields: _a0
func (_m *MockHandler) FinishSurvey(_a0 *entity.User) {
	_m.Called(_a0)
}

// MockHandler_FinishSurvey_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FinishSurvey'
type MockHandler_FinishSurvey_Call struct {
	*mock.Call
}

// FinishSurvey is a helper method to define mock.On call
//   - _a0 *entity.User
func (_e *MockHandler_Expecter) FinishSurvey(_a0 interface{}) *MockHandler_FinishSurvey_Call {
	return &MockHandler_FinishSurvey_Call{Call: _e.mock.On("FinishSurvey", _a0)}
}

func (_c *MockHandler_FinishSurvey_Call) Run(run func(_a0 *entity.User)) *MockHandler_FinishSurvey_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*entity.User))
	})
	return _c
}

func (_c *MockHandler_FinishSurvey_Call) Return() *MockHandler_FinishSurvey_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHandler_FinishSurvey_Call) RunAndReturn(run func(*entity.User)) *MockHandler_FinishSurvey_Call {
	_c.Run(run)
	return _c
}

// Send provides a mock function with given fields: _a0, _a1, _a2
func (_m *MockHandler) Send(_a0 int64, _a1 string, _a2 interface{}) {
	_m.Called(_a0, _a1, _a2)
}

// MockHandler_Send_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Send'
type MockHandler_Send_Call struct {
	*mock.Call
}

// Send is a helper method to define mock.On call
//   - _a0 int64
//   - _a1 string
//   - _a2 interface{}
func (_e *MockHandler_Expecter) Send(_a0 interface{}, _a1 interface{}, _a2 interface{}) *MockHandler_Send_Call {
	return &MockHandler_Send_Call{Call: _e.mock.On("Send", _a0, _a1, _a2)}
}

func (_c *MockHandler_Send_Call) Run(run func(_a0 int64, _a1 string, _a2 interface{})) *MockHandler_Send_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(int64), args[1].(string), args[2].(interface{}))
	})
	return _c
}

func (_c *MockHandler_Send_Call) Return() *MockHandler_Send_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHandler_Send_Call) RunAndReturn(run func(int64, string, interface{})) *MockHandler_Send_Call {
	_c.Run(run)
	return _c
}

// SendNextQuestion provides a mock function with given fields: _a0
func (_m *MockHandler) SendNextQuestion(_a0 *entity.User) {
	_m.Called(_a0)
}

// MockHandler_SendNextQuestion_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendNextQuestion'
type MockHandler_SendNextQuestion_Call struct {
	*mock.Call
}

// SendNextQuestion is a helper method to define mock.On call
//   - _a0 *entity.User
func (_e *MockHandler_Expecter) SendNextQuestion(_a0 interface{}) *MockHandler_SendNextQuestion_Call {
	return &MockHandler_SendNextQuestion_Call{Call: _e.mock.On("SendNextQuestion", _a0)}
}

func (_c *MockHandler_SendNextQuestion_Call) Run(run func(_a0 *entity.User)) *MockHandler_SendNextQuestion_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*entity.User))
	})
	return _c
}

func (_c *MockHandler_SendNextQuestion_Call) Return() *MockHandler_SendNextQuestion_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHandler_SendNextQuestion_Call) RunAndReturn(run func(*entity.User)) *MockHandler_SendNextQuestion_Call {
	_c.Run(run)
	return _c
}

// SendToAdmin provides a mock function with given fields: _a0
func (_m *MockHandler) SendToAdmin(_a0 string) {
	_m.Called(_a0)
}

// MockHandler_SendToAdmin_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'SendToAdmin'
type MockHandler_SendToAdmin_Call struct {
	*mock.Call
}

// SendToAdmin is a helper method to define mock.On call
//   - _a0 string
func (_e *MockHandler_Expecter) SendToAdmin(_a0 interface{}) *MockHandler_SendToAdmin_Call {
	return &MockHandler_SendToAdmin_Call{Call: _e.mock.On("SendToAdmin", _a0)}
}

func (_c *MockHandler_SendToAdmin_Call) Run(run func(_a0 string)) *MockHandler_SendToAdmin_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockHandler_SendToAdmin_Call) Return() *MockHandler_SendToAdmin_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockHandler_SendToAdmin_Call) RunAndReturn(run func(string)) *MockHandler_SendToAdmin_Call {
	_c.Run(run)
	return _c
}

// NewMockHandler creates a new instance of MockHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockHandler {
	mock := &MockHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
