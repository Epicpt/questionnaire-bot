name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
      
      - name: Install dependencies
        run: go mod tidy
      
      - name: Run tests
        run: go test ./...

  build-and-push:
    name: Build and Push Docker Image Bot
    needs: test
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'bot:')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      - name: Build and push Docker image
        run: |
          docker build -t epicpt/bot_question:latest .
          docker push epicpt/bot_question:latest
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /opt/projects/bot_question
            docker-compose pull bot_question
            docker-compose up -d --build bot_question

  deploy-compose:
    name: Update docker-compose on server
    runs-on: ubuntu-latest
    needs: test
    if: contains(github.event.head_commit.message, 'compose:')
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /opt/projects/bot_question
            git fetch origin main
            git checkout origin/main -- docker-compose.yml
            docker-compose up -d --build